# scripts/ud
#!/usr/bin/env bash
# chmod +x scripts/ud <-- 작동 안할시 권한 부여!
set -Eeuo pipefail

REPO_URL="https://x2okmiin.github.io/dokkaebi-inventory/#/"

echo "▶ 배포 시작…"

# 1) 버전 입력 받기
VER="${1:-}"
MSG="${2:-"chore(release): v$VER"}"   # 두 번째 인자로 커밋 메시지 받기

git add .
git commit -m "$MSG" || echo "변경 없음"

git tag -a "v$VER" -m "v$VER"
# v 붙이기 전에 검증 추가
if [[ ! "$VER" =~ ^[0-9]+(\.[0-9]+){1,2}(-[0-9A-Za-z.-]+)?$ ]]; then
  echo "⛔ 버전 형식이 올바르지 않습니다. 예: 0.1.3 또는 0.1.3-beta.1"
  exit 1
fi

if [[ -z "$VER" ]]; then
  read -rp "버전(예: 1.2.3-release): " VER
fi
if [[ -z "$VER" ]]; then
  echo "⚠️ 버전이 비었습니다."; exit 1
fi

# 2) 같은 버전 태그가 이미 있으면 중단
if git tag -l | grep -qx "v$VER"; then
  echo "⛔ 이미 진행한 업데이트 버전입니다. (v$VER)"; exit 1
fi

# 3) add/commit
git add .
if ! git commit -m "v$VER"; then
  echo "ℹ️ 변경사항 없음 — 커밋 건너뜀"
fi

# 4) 태그 & push
git tag -a "v$VER" -m "v$VER"
git push origin main
git push origin "v$VER"

# 5) 빌드 (실패 시 즉시 중단)
echo "▶ 빌드…"
npm run build

# 6) 배포 (package.json의 deploy 실행)
echo "▶ 배포…"
npm run deploy

echo "✅ 업데이트가 완료되었습니다!"
echo "🔗 바로 접속하기:: $REPO_URL"

# 실행: npm run ud
# 인자로 버전 설정: npm run ud -- v1.0.0